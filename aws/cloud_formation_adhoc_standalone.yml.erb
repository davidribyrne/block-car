<%
require 'cdo/aws/cloudfront'
%>
---
AWSTemplateFormatVersion: 2010-09-09
Description: Standalone Code.org application on a single EC2 instance with two subdomains.
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsHostnames: true
  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: {Ref: VPC}
      CidrBlock: 10.0.0.0/26
      AvailabilityZone: '<%=availability_zone%>'
      MapPublicIpOnLaunch: true
  InternetGateway:
    Type: AWS::EC2::InternetGateway
  Internet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: {Ref: VPC}
      InternetGatewayId: {Ref: InternetGateway}
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: {Ref: VPC}
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: Internet
    Properties:
      RouteTableId: {Ref: PublicRouteTable}
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: {Ref: InternetGateway}
  SubnetRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: {Ref: PublicRouteTable}
      SubnetId: {Ref: SubnetA}
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP[S] + SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: <%=ssh_ip%>
      VpcId: {Ref: VPC}
  WebServer:
    Type: AWS::EC2::Instance
    DependsOn: Internet
    CreationPolicy:
      ResourceSignal:
        Timeout: PT60M
    Properties:
      ImageId: <%=image_id%>
      SecurityGroupIds: [Ref: WebServerSecurityGroup]
      SubnetId: {Ref: SubnetA}
      InstanceType: <%=instance_type%>
      KeyName: <%=ssh_key_name%>
      Tags: [{Key: name, Value: <%=stack_name%>}]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 64
            VolumeType: gp2
      UserData:
        Fn::Base64: <%=file.call('bootstrap.sh.erb')%>
  WebServerEIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: {Ref: WebServer}
      Domain: vpc
  RootRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ['sts:AssumeRole']
      Path: '/'
  RolePolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: s3
      PolicyDocument:
        Statement:
          Effect: Allow
          Action: ['s3:GetObject']
          Resource: 'arn:aws:s3:::cdo-dist/*'
      Roles: [Ref: RootRole]
  RootInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: '/'
      Roles: [Ref: RootRole]
  PegasusCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig: <%=AWS::CloudFront.config_cloudformation(:pegasus, "origin-#{subdomain}", ["pegasus-#{subdomain}"], cloudfront_cert)%>
  DashboardCDN:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig: <%=AWS::CloudFront.config_cloudformation(:dashboard, "origin-#{subdomain}", ["dashboard-#{subdomain}"], cloudfront_cert)%>
  PegasusDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: <%=domain%>.
      RecordSets:
        - Name: "pegasus-<%=subdomain%>"
          Type: A
          AliasTarget:
            DNSName: {'Fn::GetAtt': [PegasusCDN, DomainName]}
            HostedZoneId: Z2FDTNDATAQYW2 # static ID for cloudfront aliases
  DashboardDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: <%=domain%>.
      RecordSets:
        - Name: "dashboard-<%=subdomain%>"
          Type: A
          AliasTarget:
            DNSName: {'Fn::GetAtt': [DashboardCDN, DomainName]}
            HostedZoneId: Z2FDTNDATAQYW2 # static ID for cloudfront aliases
  OriginDNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: <%=domain%>.
      RecordSets:
        - Name: "origin-<%=subdomain%>"
          Type: A
          TTL: 60
          ResourceRecords: [Ref: WebServerEIP]
Outputs:
  DashboardURL:
    Value: "https://dashboard-<%=subdomain%>"
    Description: Dashboard URL
  PegasusURL:
    Value: "https://pegasus-<%=subdomain%>"
    Description: Pegasus URL
